<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- Suppressing Spring Boot version warnings - staying with 3.4.5 for stability -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.attsw.library</groupId>
	<artifactId>library-management</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Library Management System</name>
	<description>A TDD-driven library management system with comprehensive testing coverage and CI analysis</description>
	
	<properties>
		<java.version>17</java.version>
		<!-- SonarCloud Configuration - MODIFIED TO ANALYZE TEST CODE TOO -->
		<sonar.projectKey>AvanAvi_library-management</sonar.projectKey>
		<sonar.organization>avanavi</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.coverage.exclusions>
			**/LibraryManagementSystemApplication.java,
			**/entity/*.java,
			**/dto/*.java
		</sonar.coverage.exclusions>
		<sonar.exclusions>
			**/LibraryManagementSystemApplication.java,
			**/entity/*.java,
			**/dto/*.java
		</sonar.exclusions>
		<sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	</properties>
	
	<dependencies>
		<!-- Spring Boot Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!-- Selenium WebDriver -->
		<dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<!-- Testcontainers Selenium -->
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>selenium</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<!-- WebDriverManager (auto-download drivers) -->
		<dependency>
		    <groupId>io.github.bonigarcia</groupId>
		    <artifactId>webdrivermanager</artifactId>
		    <version>5.3.2</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- Database Dependencies -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>com.mysql</groupId>
		    <artifactId>mysql-connector-j</artifactId>
		    <scope>runtime</scope>
		</dependency>
		
		<!-- Testing Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Testcontainers for Docker Integration -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Cucumber BDD Dependencies -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>7.15.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>7.15.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>7.15.0</version>
			<scope>test</scope>
		</dependency>
		
		<!-- JUnit Vintage Engine for JUnit 4 compatibility -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Quality Tools Dependencies -->
		<dependency>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>3.10.0.2594</version>
		</dependency>
		<dependency>
			<groupId>org.eluder.coveralls</groupId>
			<artifactId>coveralls-maven-plugin</artifactId>
			<version>4.3.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Boot Plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- Surefire Plugin (Unit Tests) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/unit/**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/integration/**</exclude>
						<exclude>**/e2e/**</exclude>
						<exclude>**/ui/**</exclude> 
					</excludes>
				</configuration>
			</plugin>
			
			<!-- Failsafe Plugin (Integration & E2E Tests) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/integration/**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/e2e/**/*E2ETest.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
					    <id>ui-tests</id>
					    <goals>
					        <goal>integration-test</goal>
					        <goal>verify</goal>
					    </goals>
					    <configuration>
					        <includes>
					            <include>**/ui/**/*UITest.java</include>
					        </includes>
					    </configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- JaCoCo Plugin (Enhanced Code Coverage) -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<configuration>
					<excludes>
						<exclude>**/LibraryManagementSystemApplication.class</exclude>
						<exclude>**/entity/*.class</exclude>
						<exclude>**/dto/*.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<!-- Unit Test Coverage -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					
					<!-- Integration Test Coverage -->
					<execution>
						<id>prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					
					<!-- Unit Test Report -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					
					<!-- Integration Test Report -->
					<execution>
						<id>report-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					
					<!-- Merge All Coverage Data -->
					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/aggregate.exec</destFile>
						</configuration>
					</execution>
					
					<!-- Generate Aggregate Report -->
					<execution>
						<id>aggregate-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/aggregate.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- PITest (Mutation Testing) -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.15.3</version>
				<dependencies>
					<!-- JUnit 5  -->
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>1.2.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<targetClasses>
						<param>com.attsw.library.management.controller.*</param>
						<param>com.attsw.library.management.service.*</param>
					</targetClasses>
					<targetTests>
						<param>com.attsw.library.management.unit.*</param>
						<param>com.attsw.library.management.integration.*</param>
					</targetTests>
					<excludedTestClasses>
						<param>com.attsw.library.management.e2e.*</param>
						<param>com.attsw.library.management.ui.*</param> 
					</excludedTestClasses>
					<mutators>
						<mutator>DEFAULTS</mutator>
					</mutators>
					<mutationThreshold>100</mutationThreshold>
					<outputFormats>
						<outputFormat>XML</outputFormat>
						<outputFormat>HTML</outputFormat>
					</outputFormats>
				</configuration>
			</plugin>
			
			<!-- SonarCloud Plugin -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.10.0.2594</version>
			</plugin>
			
			<!-- Coveralls Plugin (Enhanced) -->
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<jacocoReports>
						<!-- Use the aggregate report for complete coverage -->
						<jacocoReport>${project.reporting.outputDirectory}/jacoco-aggregate/jacoco.xml</jacocoReport>
					</jacocoReports>
					<failOnServiceError>false</failOnServiceError>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Profiles for different environments -->
	<profiles>
		<profile>
			<id>skip-ui-tests</id>
			<activation>
				<property>
					<name>skip.ui.tests</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>ui-tests</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>bdd-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<includes>
								<include>**/bdd/**/*TestRunner.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>